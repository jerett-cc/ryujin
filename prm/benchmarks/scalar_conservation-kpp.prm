##
#
# A 2D scalar conservation equation with the kpp flux f(u)={sin(u),cos(u)}
# as poprosed by Kurganov, Petrova, Popov [1]
#
#
# The chosen refinement level 10 corresponds to around 1.05M gridpoints
# (same number of degrees of freedom), which requires around 320 time steps
# and runs for about (12min / #n_cores) on a modern system.
#
# [1] Kurganov, Petrova, Popov: Adaptive Semidiscrete Central-Upwind
#     Schemes for Nonconvex Hyperbolic Conservation Laws. SIAM Journal on
#     Scientific Computing 2007, vol. 29. DOI 10.1137/040614189.
#
##


subsection A - TimeLoop
  set basename                      = kpp

  set enable output full            = true

  set final time                    = 1.00
  set output granularity            = 1.00
end


subsection B - Equation
  set dimension                       = 2
  set equation                        = scalar conservation
  set flux                            = kpp

  set riemann solver averaged entropy = true
  set riemann solver greedy wavespeed = true
  set riemann solver random entropies = 0
end


subsection C - Discretization
  set geometry            = rectangular domain

  set mesh refinement     = 10
  set mesh repartitioning = false

  subsection rectangular domain
    set boundary condition bottom = dirichlet
    set boundary condition left   = dirichlet
    set boundary condition right  = dirichlet
    set boundary condition top    = dirichlet

    set position bottom left      = -2, -2.5
    set position top right        =  2,  1.5
  end
end


subsection E - InitialValues
  set configuration = function
  set direction     = 1, 0
  set position      = 0, 0

  subsection function
    set expression = 0.78539816339 * if(x*x + y*y < 1, 14, 1)
  end
end


subsection F - HyperbolicModule
  set cfl with boundary dofs        = false

  set limiter iterations            = 2
  set limiter relaxation factor     = 1
end


subsection H - TimeIntegrator
  set cfl max               = 0.9
  set cfl min               = 0.9
  set cfl recovery strategy = none

  set time stepping scheme  = erk 33
end


subsection I - VTUOutput
  set schlieren quantities =
  set use mpi io           = true
end
